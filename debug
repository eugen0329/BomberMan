#!  /bin/bash

selfDir=$(dirname $0)

CPPFLAGS="-Wall -pedantic-errors -g" BINARY="$selfDir/bin"
LSFMLFL="-lsfml-graphics -lsfml-window -lsfml-system"

srcDir="$selfDir/src"
objDir="$selfDir/obj"
incDir="$selfDir/inc"

includes="-I $srcDir -I $incDir "

getObjFileEqName()
{
    echo $1 | sed "s/src/obj/; s/\.cpp/\.o/"
}

getObjDiffTime()
{
    echo $1 | sed "s/src/obj/; s/\.cpp/\.o/" | xargs -I {} stat -c "%Z" {}
}

getSrcDiffTime()
{
    stat -c "%Z" $1
}

checkForErrors()
{
    if [ $? -ne 0 ] ; then 
        errCounter=$(( $errCounter + 1))
    fi
}

mkTheSameObjDirs()
{
    local srcDirs 
    srcDirs=$(find $srcDir -type d | sed "s/src\//obj\//")
    echo "$srcDirs"
    mkdir -p $srcDirs
}

checkErrCounter()
{
    if [ $errCounter -ne 0 ]; then
        echo "Exit ERROR($errCounter errors)"
        exit 1
    fi
}

mkTheSameObjDirs

errCounter=0
objCounter=0
newObjCounter=0
for f in $(find $srcDir -name "*.cpp" -exec echo {} \;)
do
    echo "    $f"
    if [ ! -e "$(getObjFileEqName $f)" ] || [ $(getSrcDiffTime $f) -gt $(getObjDiffTime $f) ]  ; then
        echo "        (+) Compiling..."
        g++ ${CPPFLAGS} -c "$f" -o $(getObjFileEqName $f) $includes
        newObjCounter=$(( $newObjCounter + 1 ))
    else
        echo "        The oldest version"
    fi
    checkForErrors
    objCounter=$(( $objCounter + 1 ))
done

echo "-------------------------"
echo "$newObjCounter builded objects"
echo "$objCounter objects in sum"
echo 

checkErrCounter
objNames=$(find $objDir -type f)
echo "Linking:"
g++ ${CPPFLAGS} ${objNames} -o ${BINARY} ${LSFMLFL}
checkErrCounter

echo "    $BINARY"
echo "-------------------------"
echo "Exit Success"

exit 0
